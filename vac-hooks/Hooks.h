#pragma once

#include <WinSock2.h>
#include <WS2tcpip.h>
#include <iphlpapi.h>
#include <Windows.h>
#include <dbghelp.h>
#include <Psapi.h>
#define SECURITY_WIN32
#include <security.h>
#include <SetupAPI.h>
#include <Snmp.h>
#include <TlHelp32.h>
#include <userenv.h>
#include <winternl.h>
#include <WinTrust.h>

HMODULE           WINAPI     Hooks_LoadLibraryExW(LPCWSTR, HANDLE, DWORD);
FARPROC           WINAPI     Hooks_GetProcAddress(HMODULE, LPCSTR);
HANDLE            WINAPI     Hooks_OpenProcess(DWORD, BOOL, DWORD);
DWORD             WINAPI     Hooks_GetProcessImageFileNameA(HANDLE, LPSTR, DWORD);
DWORD             WINAPI     Hooks_GetProcessImageFileNameW(HANDLE, LPWSTR, DWORD);
int               WINAPI     Hooks_GetWindowTextW(HWND, LPWSTR, int);
BOOL              WINAPI     Hooks_QueryFullProcessImageNameW(HANDLE, DWORD, LPWSTR, PDWORD);
DWORD             WINAPI     Hooks_GetModuleBaseNameA(HANDLE, HMODULE, LPSTR, DWORD);
DWORD             WINAPI     Hooks_GetModuleBaseNameW(HANDLE, HMODULE, LPWSTR, DWORD);
DWORD             WINAPI     Hooks_GetModuleFileNameA(HMODULE, LPSTR, DWORD);
DWORD             WINAPI     Hooks_GetModuleFileNameExA(HANDLE, HMODULE, LPSTR, DWORD);
DWORD             WINAPI     Hooks_GetModuleFileNameExW(HANDLE, HMODULE, LPWSTR, DWORD);
BOOL              WINAPI     Hooks_GetComputerNameExW(COMPUTER_NAME_FORMAT, LPWSTR, LPDWORD);
HANDLE            WINAPI     Hooks_CreateRemoteThread(HANDLE, LPSECURITY_ATTRIBUTES, SIZE_T, LPTHREAD_START_ROUTINE, LPVOID, DWORD, LPDWORD);
NTSTATUS          NTAPI      Hooks_NtOpenProcess(PHANDLE, ACCESS_MASK, PVOID, PVOID);
BOOL              WINAPI     Hooks_ReadProcessMemory(HANDLE, LPCVOID, LPVOID, SIZE_T, SIZE_T*);
BOOL              WINAPI     Hooks_WriteProcessMemory(HANDLE, LPVOID, LPCVOID, SIZE_T, SIZE_T*);
int               WINAPI     Hooks_MultiByteToWideChar(UINT, DWORD, LPCCH, int, LPWSTR, int);
BOOLEAN           SEC_ENTRY  Hooks_GetUserNameExW(EXTENDED_NAME_FORMAT, LPWSTR, PULONG);
UINT              WINAPI     Hooks_GetDriveTypeW(LPCWSTR);
LSTATUS           APIENTRY   Hooks_RegEnumKeyExA(HKEY, DWORD, LPSTR, LPDWORD, LPDWORD, LPSTR, LPDWORD, PFILETIME);
LSTATUS           APIENTRY   Hooks_RegOpenKeyExA(HKEY, LPCSTR, DWORD, REGSAM, PHKEY);
LSTATUS           APIENTRY   Hooks_RegCloseKey(HKEY);
LSTATUS           APIENTRY   Hooks_RegQueryInfoKeyA(HKEY, LPSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, LPDWORD, PFILETIME);
LSTATUS           APIENTRY   Hooks_RegQueryValueExA(HKEY, LPCSTR, LPDWORD, LPDWORD, LPBYTE, LPDWORD);
VOID              WINAPI     Hooks_OutputDebugStringA(LPCSTR);
BOOL              APIENTRY   Hooks_GetFileVersionInfoA(LPCSTR, DWORD, DWORD, LPVOID);
BOOL              APIENTRY   Hooks_GetFileVersionInfoW(LPCWSTR, DWORD, DWORD, LPVOID);
DWORD             APIENTRY   Hooks_GetFileVersionInfoSizeA(LPCSTR, LPDWORD);
DWORD             APIENTRY   Hooks_GetFileVersionInfoSizeW(LPCWSTR, LPDWORD);
DWORD             WINAPI     Hooks_GetFileSize(HANDLE, LPDWORD);
BOOL              WINAPI     Hooks_GetFileSizeEx(HANDLE, PLARGE_INTEGER);
BOOL              WINAPI     Hooks_GetWindowInfo(HWND, PWINDOWINFO);
UINT              WINAPI     Hooks_GetWindowsDirectoryA(LPSTR, UINT);
UINT              WINAPI     Hooks_GetWindowsDirectoryW(LPWSTR, UINT);
HMODULE           WINAPI     Hooks_GetModuleHandleA(LPCSTR);
PVOID             WINAPI     Hooks_AddVectoredExceptionHandler(ULONG, PVECTORED_EXCEPTION_HANDLER);
BOOL              WINAPI     Hooks_AdjustTokenPrivileges(HANDLE, BOOL, PTOKEN_PRIVILEGES, DWORD, PTOKEN_PRIVILEGES, PDWORD);
DWORD             WINAPI     Hooks_CertGetNameStringW(PCCERT_CONTEXT, DWORD, DWORD, void*, LPWSTR, DWORD);
HANDLE            WINAPI     Hooks_CreateFileA(LPCSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
HANDLE            WINAPI     Hooks_CreateFileW(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
HANDLE            WINAPI     Hooks_GetCurrentProcess(VOID);
DWORD             WINAPI     Hooks_GetCurrentProcessId(VOID);
HANDLE            WINAPI     Hooks_GetCurrentThread(VOID);
DWORD             WINAPI     Hooks_GetCurrentThreadId(VOID);
HANDLE            WINAPI     Hooks_CreateToolhelp32Snapshot(DWORD, DWORD);
BOOL              WINAPI     Hooks_EnumChildWindows(HWND, WNDENUMPROC, LPARAM);
BOOL              WINAPI     Hooks_EnumProcesses(DWORD*, DWORD, LPDWORD);
BOOL              WINAPI     Hooks_EnumWindows(WNDENUMPROC, LPARAM);
BOOL              WINAPI     Hooks_GetProcessTimes(HANDLE, LPFILETIME, LPFILETIME, LPFILETIME, LPFILETIME);
DWORD             WINAPI     Hooks_WaitForSingleObject(HANDLE, DWORD);
LPVOID            WINAPI     Hooks_VirtualAlloc(LPVOID, SIZE_T, DWORD, DWORD);
LPVOID            WINAPI     Hooks_VirtualAllocEx(HANDLE, LPVOID, SIZE_T, DWORD, DWORD);
BOOL              WINAPI     Hooks_VirtualFree(LPVOID, SIZE_T, DWORD);
BOOL              WINAPI     Hooks_VirtualFreeEx(HANDLE, LPVOID, SIZE_T, DWORD);
BOOL              WINAPI     Hooks_VirtualProtect(LPVOID, SIZE_T, DWORD, PDWORD);
SIZE_T            WINAPI     Hooks_VirtualQuery(LPCVOID, PMEMORY_BASIC_INFORMATION, SIZE_T);
SIZE_T            WINAPI     Hooks_VirtualQueryEx(HANDLE, LPCVOID, PMEMORY_BASIC_INFORMATION, SIZE_T);
DWORD             WINAPI     Hooks_SuspendThread(HANDLE);
BOOL              WINAPI     Hooks_SwitchToThread(VOID);
BOOLEAN           WINAPI     Hooks_Wow64EnableWow64FsRedirection(BOOLEAN);
LONG              WINAPI     Hooks_WinVerifyTrust(HWND, GUID*, LPVOID);
VOID              WINAPI     Hooks_Sleep(DWORD);
HANDLE            WINAPI     Hooks_CreateFileMappingW(HANDLE, LPSECURITY_ATTRIBUTES, DWORD, DWORD, DWORD, LPCWSTR);
BOOL              WINAPI     Hooks_OpenProcessToken(HANDLE, DWORD, PHANDLE);
BOOL              WINAPI     Hooks_EnumServicesStatusA(SC_HANDLE, DWORD, DWORD, LPENUM_SERVICE_STATUSA, DWORD, LPDWORD, LPDWORD, LPDWORD);
BOOL              WINAPI     Hooks_EnumServicesStatusW(SC_HANDLE, DWORD, DWORD, LPENUM_SERVICE_STATUSW, DWORD, LPDWORD, LPDWORD, LPDWORD);
HANDLE            WINAPI     Hooks_FindFirstVolumeW(LPWSTR, DWORD);
BOOL              WINAPI     Hooks_FindNextVolumeW(HANDLE, LPWSTR, DWORD);
BOOL              WINAPI     Hooks_FlushInstructionCache(HANDLE, LPCVOID, SIZE_T);
BOOL              WINAPI     Hooks_GetVolumePathNamesForVolumeNameW(LPCWSTR, LPWCH, DWORD, PDWORD);
DWORD             WINAPI     Hooks_GetWindowThreadProcessId(HWND, LPDWORD);
BOOL              WINAPI     Hooks_Heap32First(LPHEAPENTRY32, DWORD, ULONG_PTR);
NTSTATUS          NTAPI      Hooks_NtQuerySystemInformation(SYSTEM_INFORMATION_CLASS, PVOID, ULONG, PULONG);
BOOL              WINAPI     Hooks_ConvertSidToStringSidA(PSID, LPSTR*);
BOOL              WINAPI     Hooks_CryptMsgGetParam(HCRYPTMSG, DWORD, DWORD, void*, DWORD*);
NTSTATUS          NTAPI      Hooks_NtQueryInformationProcess(HANDLE, PROCESSINFOCLASS, PVOID, ULONG, PULONG);
PVOID             WINAPI     Hooks_EncodePointer(PVOID);
NTSTATUS          NTAPI      Hooks_NtQueryInformationThread(HANDLE, THREADINFOCLASS, PVOID, ULONG, PULONG);
SC_HANDLE         WINAPI     Hooks_OpenSCManagerA(LPCSTR, LPCSTR, DWORD);
HANDLE            WINAPI     Hooks_OpenThread(DWORD, BOOL, DWORD);
BOOL              WINAPI     Hooks_Process32FirstW(HANDLE, LPPROCESSENTRY32W);
BOOL              WINAPI     Hooks_Process32NextW(HANDLE, LPPROCESSENTRY32W);
BOOL              WINAPI     Hooks_WriteFile(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
NTSTATUS          NTAPI      Hooks_NtQueryVirtualMemory(HANDLE, PVOID, DWORD, PVOID, ULONG, PULONG);
VOID              WINAPI     Hooks_SetLastError(DWORD);
DWORD_PTR         WINAPI     Hooks_SetThreadAffinityMask(HANDLE, DWORD_PTR);
BOOL              WINAPI     Hooks_Thread32First(HANDLE, LPTHREADENTRY32);
BOOL              WINAPI     Hooks_Thread32Next(HANDLE, LPTHREADENTRY32);
NTSTATUS          NTAPI      Hooks_NtQueryObject(HANDLE, OBJECT_INFORMATION_CLASS, PVOID, ULONG, PULONG);
NTSTATUS          NTAPI      Hooks_NtFsControlFile(HANDLE, HANDLE, PIO_APC_ROUTINE, PVOID, PIO_STATUS_BLOCK, ULONG, PVOID, ULONG, PVOID, ULONG);
BOOL              WINAPI     Hooks_GetThreadContext(HANDLE, LPCONTEXT);
BOOL              WINAPI     Hooks_GetTokenInformation(HANDLE, TOKEN_INFORMATION_CLASS, LPVOID, DWORD, PDWORD);
BOOL              WINAPI     Hooks_GetUserProfileDirectoryA(HANDLE, LPSTR, LPDWORD);
BOOL              WINAPI     Hooks_GetUserProfileDirectoryW(HANDLE, LPWSTR, LPDWORD);
NTSTATUS          NTAPI      Hooks_NtDuplicateObject(HANDLE, PHANDLE, HANDLE, PHANDLE, ACCESS_MASK, BOOLEAN, ULONG);
HANDLE            WINAPI     Hooks_OpenFileMappingW(DWORD, BOOL, LPCWSTR);
HANDLE            WINAPI     Hooks_OpenFileMappingA(DWORD, BOOL, LPCSTR);
NTSTATUS          NTAPI      Hooks_RtlDecompressBufferEx(USHORT, PUCHAR, ULONG, PUCHAR, ULONG, PULONG, PVOID);
ULONG             WINAPI     Hooks_GetTcpTable(PMIB_TCPTABLE, PULONG, BOOL);
BOOL              WINAPI     Hooks_CloseHandle(HANDLE);
DWORD             WINAPI     Hooks_SetFilePointer(HANDLE, LONG, PLONG, DWORD);
BOOL              WINAPI     Hooks_SetFilePointerEx(HANDLE, LARGE_INTEGER, PLARGE_INTEGER, DWORD);
HANDLE            WINAPI     Hooks_OpenFileById(HANDLE, LPFILE_ID_DESCRIPTOR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD);
DWORD             WINAPI     Hooks_GetMappedFileNameA(HANDLE, LPVOID, LPSTR, DWORD);
DWORD             WINAPI     Hooks_GetMappedFileNameW(HANDLE, LPVOID, LPWSTR, DWORD);
DWORD             WINAPI     Hooks_ResumeThread(HANDLE);
DWORD64           WINAPI     Hooks_SymGetModuleBase64(HANDLE, DWORD64);
DWORD             WINAPI     Hooks_GetProcessId(HANDLE);
BOOL              WINAPI     Hooks_IsBadReadPtr(CONST VOID*, UINT_PTR);
BOOL              WINAPI     Hooks_ReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
DWORD             WINAPI     Hooks_GetThreadId(HANDLE);
HLOCAL            WINAPI     Hooks_LocalAlloc(UINT, SIZE_T);
BOOL              WINAPI     Hooks_GetModuleInformation(HANDLE, HMODULE, LPMODULEINFO, DWORD);
BOOL              WINAPI     Hooks_IsWow64Process(HANDLE, PBOOL);
UINT              WINAPI     Hooks_GetSystemDirectoryA(LPSTR, UINT);
UINT              WINAPI     Hooks_GetSystemDirectoryW(LPWSTR, UINT);
HANDLE            WINAPI     Hooks_GetProcessHeap(VOID);
LPVOID            WINAPI     Hooks_MapViewOfFile(HANDLE, DWORD, DWORD, DWORD, SIZE_T);
BOOL              WINAPI     Hooks_UnmapViewOfFile(LPCVOID);
BOOL              WINAPI     Hooks_GetVolumeInformationByHandleW(HANDLE, LPWSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPWSTR, DWORD);
BOOL              WINAPI     Hooks_EnumProcessModules(HANDLE, HMODULE*, DWORD, LPDWORD);
DWORD             WINAPI     Hooks_GetTickCount(VOID);
HDEVINFO          WINAPI     Hooks_SetupDiGetClassDevsA(CONST GUID*, PCSTR, HWND, DWORD);
BOOL              WINAPI     Hooks_SetupDiEnumDeviceInfo(HDEVINFO, DWORD, PSP_DEVINFO_DATA);
LPVOID            WINAPI     Hooks_HeapAlloc(HANDLE, DWORD, SIZE_T);
BOOL              WINAPI     Hooks_HeapFree(HANDLE, DWORD, LPVOID);
BOOL              WINAPI     Hooks_FindVolumeClose(HANDLE);
NTSTATUS          NTAPI      Hooks_NtReadVirtualMemory(HANDLE, PVOID, PVOID, ULONG, PULONG);
NTSTATUS          WINAPI     Hooks_NtOpenDirectoryObject(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES);
HLOCAL            WINAPI     Hooks_LocalFree(HLOCAL);
SC_HANDLE         WINAPI     Hooks_OpenServiceA(SC_HANDLE, LPCSTR, DWORD);
SC_HANDLE         WINAPI     Hooks_OpenServiceW(SC_HANDLE, LPCWSTR, DWORD);
VOID              WINAPI     Hooks_GetSystemTimeAsFileTime(LPFILETIME);
HANDLE            WINAPI     Hooks_OpenEventLogA(LPCSTR, LPCSTR);
BOOL              WINAPI     Hooks_ReadEventLogA(HANDLE, DWORD, DWORD, LPVOID, DWORD, DWORD*, DWORD*);
BOOL              WINAPI     Hooks_CloseEventLog(HANDLE);
DWORD             WINAPI     Hooks_QueryDosDeviceA(LPCSTR, LPSTR, DWORD);
DWORD             WINAPI     Hooks_QueryDosDeviceW(LPCWSTR, LPWSTR, DWORD);
DWORD             WINAPI     Hooks_GetLastError(VOID);
BOOL              WINAPI     Hooks_GetFileInformationByHandle(HANDLE, LPBY_HANDLE_FILE_INFORMATION);
BOOL              WINAPI     Hooks_GetFileInformationByHandleEx(HANDLE, FILE_INFO_BY_HANDLE_CLASS, LPVOID, DWORD);
BOOL              WINAPI     Hooks_CloseServiceHandle(SC_HANDLE);
BOOL              WINAPI     Hooks_QueryServiceConfigA(SC_HANDLE, LPQUERY_SERVICE_CONFIGA, DWORD, LPDWORD);
BOOL              WINAPI     Hooks_QueryServiceConfigW(SC_HANDLE, LPQUERY_SERVICE_CONFIGW, DWORD, LPDWORD);
HRESULT           WINAPI     Hooks_WinVerifyTrustEx(HWND, GUID*, WINTRUST_DATA*);
HMODULE           WINAPI     Hooks_LoadLibraryA(LPCSTR);
BOOL              WINAPI     Hooks_GetVolumeInformationW(LPCWSTR, LPWSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPWSTR, DWORD);
HMODULE           WINAPI     Hooks_LoadLibraryExA(LPCSTR, HANDLE, DWORD);
BOOL              WINAPI     Hooks_FreeLibrary(HMODULE);
NTSTATUS          NTAPI      Hooks_NtOpenSection(PHANDLE, ACCESS_MASK, POBJECT_ATTRIBUTES);
NTSTATUS          NTAPI      Hooks_NtQuerySection(HANDLE, DWORD, PVOID, ULONG, PULONG);
DWORD             WINAPI     Hooks_GetLogicalDriveStringsA(DWORD, LPSTR);
DWORD             WINAPI     Hooks_GetLogicalDriveStringsW(DWORD, LPWSTR);
BOOL              WINAPI     Hooks_GetModuleHandleExA(DWORD, LPCSTR, HMODULE*);
BOOL              WINAPI     Hooks_Module32FirstW(HANDLE, LPMODULEENTRY32W);
BOOL              WINAPI     Hooks_Module32NextW(HANDLE, LPMODULEENTRY32W);
BOOL              WINAPI     Hooks_SetupDiDestroyDeviceInfoList(HDEVINFO);
PVOID             WINAPI     Hooks_SymFunctionTableAccess64(HANDLE, DWORD64);
ULONG             WINAPI     Hooks_GetUdpTable(PMIB_UDPTABLE, PULONG, BOOL);
BOOL              WINAPI     Hooks_CryptDecodeObject(DWORD, LPCSTR, const BYTE*, DWORD, DWORD, void*, DWORD*);
BOOL              WINAPI     Hooks_CryptMsgClose(HCRYPTMSG);
PCCERT_CONTEXT    WINAPI     Hooks_CertFindCertificateInStore(HCERTSTORE, DWORD, DWORD, DWORD, const void*, PCCERT_CONTEXT);
BOOL              WINAPI     Hooks_CertCloseStore(HCERTSTORE, DWORD);
NTSTATUS          NTAPI      Hooks_NtMapViewOfSection(HANDLE, HANDLE, PVOID*, ULONG, ULONG, PLARGE_INTEGER, PULONG, DWORD, ULONG, ULONG);
BOOL              APIENTRY   Hooks_VerQueryValueA(LPCVOID, LPCSTR, LPVOID*, PUINT);
BOOL              APIENTRY   Hooks_VerQueryValueW(LPCVOID, LPCWSTR, LPVOID*, PUINT);
BOOL              WINAPI     Hooks_CryptQueryObject(DWORD, const void*, DWORD, DWORD, DWORD, DWORD*, DWORD*, DWORD*, HCERTSTORE*, HCRYPTMSG*, const void**);
BOOL              WINAPI     Hooks_LookupPrivilegeValueA(LPCSTR, LPCSTR, PLUID);
NTSTATUS          NTAPI      Hooks_NtClose(HANDLE);
int               WINAPI     Hooks_CompareStringW(LCID, DWORD, PCNZWCH, int, PCNZWCH, int);
BOOL              WINAPI     Hooks_StackWalk64(DWORD, HANDLE, HANDLE, LPSTACKFRAME64, PVOID, PREAD_PROCESS_MEMORY_ROUTINE64, PFUNCTION_TABLE_ACCESS_ROUTINE64, PGET_MODULE_BASE_ROUTINE64, PTRANSLATE_ADDRESS_ROUTINE64);
int               WINAPI     Hooks_WideCharToMultiByte(UINT, DWORD, LPCWCH, int, LPSTR, int, LPCCH, LPBOOL);
BOOL              WINAPI     Hooks_GetVersionExA(LPOSVERSIONINFOEXA);
BOOL              WINAPI     Hooks_GetVersionExW(LPOSVERSIONINFOEXW);
BOOL              WINAPI     Hooks_SetupDiGetDeviceRegistryPropertyA(HDEVINFO, PSP_DEVINFO_DATA, DWORD, PDWORD, PBYTE, DWORD, PDWORD);
BOOL              WINAPI     Hooks_CryptHashCertificate(HCRYPTPROV_LEGACY, ALG_ID, DWORD, const BYTE*, DWORD, BYTE*, DWORD*);
BOOL              WINAPI     Hooks_CertFreeCertificateContext(PCCERT_CONTEXT);
VOID              WINAPI     Hooks_GetSystemInfo(LPSYSTEM_INFO);
NTSTATUS          NTAPI      Hooks_NtQueryDirectoryObject(HANDLE, PVOID, ULONG, BOOLEAN, BOOLEAN, PULONG, PULONG);
NTSTATUS          NTAPI      Hooks_RtlGetCompressionWorkSpaceSize(ULONG, PULONG, PULONG);
int               WINAPI     Hooks_lstrlenW(LPCWSTR);
LPWSTR            WINAPI     Hooks_lstrcatW(LPWSTR, LPCWSTR);
NTSTATUS          NTAPI      Hooks_NtWow64QueryVirtualMemory64(HANDLE, PVOID64, DWORD, PVOID, ULONG64, PULONG64);
NTSTATUS          NTAPI      Hooks_NtWow64ReadVirtualMemory64(HANDLE, PVOID64, PVOID, ULONG64, PULONG64);
NTSTATUS          NTAPI      Hooks_NtWow64QueryInformationProcess64(HANDLE, PROCESSINFOCLASS, PVOID, ULONG, PULONG);
ULONG             WINAPI     Hooks_GetTcp6Table(PMIB_TCP6TABLE, PULONG, BOOL);
ULONG             WINAPI     Hooks_GetUdp6Table(PMIB_UDP6TABLE, PULONG, BOOL);
DWORD             WINAPI     Hooks_GetVersion(VOID);
VOID              WINAPI     Hooks_GetNativeSystemInfo(LPSYSTEM_INFO);
BOOL              WINAPI     Hooks_SnmpExtensionInit(DWORD, HANDLE*, AsnObjectIdentifier*);
BOOL              WINAPI     Hooks_SnmpExtensionQuery(BYTE, SnmpVarBindList*, AsnInteger32*, AsnInteger32*);
LPVOID            WINAPI     Hooks_SnmpUtilMemAlloc(UINT);
VOID              WINAPI     Hooks_SnmpUtilVarBindFree(SnmpVarBind*);
VOID              WINAPI     Hooks_SnmpExtensionClose(VOID);
LPWSTR            WINAPI     Hooks_CharUpperW(LPWSTR);
int               WINAPI     Hooks_lstrcmpiW(LPCWSTR, LPCWSTR);
int               WINAPIV    Hooks_wsprintfW(LPWSTR, LPCWSTR, ...);
int               WINAPIV    Hooks_wsprintfA(LPSTR, LPCSTR, ...);
VOID              WINAPI     Hooks_ExitProcess(UINT);
